{"uid":"cb9b9487824f4b19","name":"test_check_card_price","fullName":"tests.test_main_page.TestHotSellerSection#test_check_card_price","historyId":"f4026d9f96acc9996f781ecba7818e56","time":{"start":1688519433913,"stop":1688519435185,"duration":1272},"description":"This test checks that the card has a price and a price in USD","descriptionHtml":"<p>This test checks that the card has a price and a price in USD</p>\n","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=114.0.5735.133)\nStacktrace:\n#0 0x559baa2454e3 <unknown>\n#1 0x559ba9f74c76 <unknown>\n#2 0x559ba9f7953c <unknown>\n#3 0x559ba9f7b480 <unknown>\n#4 0x559ba9fe8f32 <unknown>\n#5 0x559ba9fd0012 <unknown>\n#6 0x559ba9fe830e <unknown>\n#7 0x559ba9fcfde3 <unknown>\n#8 0x559ba9fa52dd <unknown>\n#9 0x559ba9fa634e <unknown>\n#10 0x559baa2053e4 <unknown>\n#11 0x559baa2093d7 <unknown>\n#12 0x559baa213b20 <unknown>\n#13 0x559baa20a023 <unknown>\n#14 0x559baa1d81aa <unknown>\n#15 0x559baa22e6b8 <unknown>\n#16 0x559baa22e847 <unknown>\n#17 0x559baa23e243 <unknown>\n#18 0x7fb41eea5b43 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7fa3161c4990>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc435b40f44a543933bf7e0939347bab\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    def test_check_card_price(self, driver):\n        \"\"\"This test checks that the card has a price and a price in USD\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       text = page.check_card_price()\n\ntests/test_main_page.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:49: in check_card_price\n    text = self.get_text(self.locators.CARD_PRICE)\npages/base_page.py:144: in get_text\n    text = self.element_is_visible(locator)\npages/base_page.py:29: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\npages/base_page.py:87: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:500: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa3178aa450>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x559baa22e847 \\\\u003Cunknown>\\\\n#17 0x559baa23e243 \\\\u003Cunknown>\\\\n#18 0x7fb41eea5b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=114.0.5735.133)\nE       Stacktrace:\nE       #0 0x559baa2454e3 <unknown>\nE       #1 0x559ba9f74c76 <unknown>\nE       #2 0x559ba9f7953c <unknown>\nE       #3 0x559ba9f7b480 <unknown>\nE       #4 0x559ba9fe8f32 <unknown>\nE       #5 0x559ba9fd0012 <unknown>\nE       #6 0x559ba9fe830e <unknown>\nE       #7 0x559ba9fcfde3 <unknown>\nE       #8 0x559ba9fa52dd <unknown>\nE       #9 0x559ba9fa634e <unknown>\nE       #10 0x559baa2053e4 <unknown>\nE       #11 0x559baa2093d7 <unknown>\nE       #12 0x559baa213b20 <unknown>\nE       #13 0x559baa20a023 <unknown>\nE       #14 0x559baa1d81aa <unknown>\nE       #15 0x559baa22e6b8 <unknown>\nE       #16 0x559baa22e847 <unknown>\nE       #17 0x559baa23e243 <unknown>\nE       #18 0x7fb41eea5b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1688518712769,"stop":1688518712873,"duration":104},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_result_folder","time":{"start":1688518712874,"stop":1688518712874,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1688519432739,"stop":1688519433913,"duration":1174},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"This test checks that the card has a price and a price in USD","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=114.0.5735.133)\nStacktrace:\n#0 0x559baa2454e3 <unknown>\n#1 0x559ba9f74c76 <unknown>\n#2 0x559ba9f7953c <unknown>\n#3 0x559ba9f7b480 <unknown>\n#4 0x559ba9fe8f32 <unknown>\n#5 0x559ba9fd0012 <unknown>\n#6 0x559ba9fe830e <unknown>\n#7 0x559ba9fcfde3 <unknown>\n#8 0x559ba9fa52dd <unknown>\n#9 0x559ba9fa634e <unknown>\n#10 0x559baa2053e4 <unknown>\n#11 0x559baa2093d7 <unknown>\n#12 0x559baa213b20 <unknown>\n#13 0x559baa20a023 <unknown>\n#14 0x559baa1d81aa <unknown>\n#15 0x559baa22e6b8 <unknown>\n#16 0x559baa22e847 <unknown>\n#17 0x559baa23e243 <unknown>\n#18 0x7fb41eea5b43 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7fa3161c4990>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc435b40f44a543933bf7e0939347bab\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    def test_check_card_price(self, driver):\n        \"\"\"This test checks that the card has a price and a price in USD\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       text = page.check_card_price()\n\ntests/test_main_page.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:49: in check_card_price\n    text = self.get_text(self.locators.CARD_PRICE)\npages/base_page.py:144: in get_text\n    text = self.element_is_visible(locator)\npages/base_page.py:29: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\npages/base_page.py:87: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:500: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa3178aa450>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x559baa22e847 \\\\u003Cunknown>\\\\n#17 0x559baa23e243 \\\\u003Cunknown>\\\\n#18 0x7fb41eea5b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=114.0.5735.133)\nE       Stacktrace:\nE       #0 0x559baa2454e3 <unknown>\nE       #1 0x559ba9f74c76 <unknown>\nE       #2 0x559ba9f7953c <unknown>\nE       #3 0x559ba9f7b480 <unknown>\nE       #4 0x559ba9fe8f32 <unknown>\nE       #5 0x559ba9fd0012 <unknown>\nE       #6 0x559ba9fe830e <unknown>\nE       #7 0x559ba9fcfde3 <unknown>\nE       #8 0x559ba9fa52dd <unknown>\nE       #9 0x559ba9fa634e <unknown>\nE       #10 0x559baa2053e4 <unknown>\nE       #11 0x559baa2093d7 <unknown>\nE       #12 0x559baa213b20 <unknown>\nE       #13 0x559baa20a023 <unknown>\nE       #14 0x559baa1d81aa <unknown>\nE       #15 0x559baa22e6b8 <unknown>\nE       #16 0x559baa22e847 <unknown>\nE       #17 0x559baa23e243 <unknown>\nE       #18 0x7fb41eea5b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","steps":[{"name":"Open a browser","time":{"start":1688519433913,"stop":1688519435024,"duration":1111},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get element text","time":{"start":1688519435024,"stop":1688519435184,"duration":160},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=114.0.5735.133)\nStacktrace:\n#0 0x559baa2454e3 <unknown>\n#1 0x559ba9f74c76 <unknown>\n#2 0x559ba9f7953c <unknown>\n#3 0x559ba9f7b480 <unknown>\n#4 0x559ba9fe8f32 <unknown>\n#5 0x559ba9fd0012 <unknown>\n#6 0x559ba9fe830e <unknown>\n#7 0x559ba9fcfde3 <unknown>\n#8 0x559ba9fa52dd <unknown>\n#9 0x559ba9fa634e <unknown>\n#10 0x559baa2053e4 <unknown>\n#11 0x559baa2093d7 <unknown>\n#12 0x559baa213b20 <unknown>\n#13 0x559baa20a023 <unknown>\n#14 0x559baa1d81aa <unknown>\n#15 0x559baa22e6b8 <unknown>\n#16 0x559baa22e847 <unknown>\n#17 0x559baa23e243 <unknown>\n#18 0x7fb41eea5b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 144, in get_text\n    text = self.element_is_visible(locator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 29, in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 87, in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 500, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1688519435025,"stop":1688519435183,"duration":158},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=114.0.5735.133)\nStacktrace:\n#0 0x559baa2454e3 <unknown>\n#1 0x559ba9f74c76 <unknown>\n#2 0x559ba9f7953c <unknown>\n#3 0x559ba9f7b480 <unknown>\n#4 0x559ba9fe8f32 <unknown>\n#5 0x559ba9fd0012 <unknown>\n#6 0x559ba9fe830e <unknown>\n#7 0x559ba9fcfde3 <unknown>\n#8 0x559ba9fa52dd <unknown>\n#9 0x559ba9fa634e <unknown>\n#10 0x559baa2053e4 <unknown>\n#11 0x559baa2093d7 <unknown>\n#12 0x559baa213b20 <unknown>\n#13 0x559baa20a023 <unknown>\n#14 0x559baa1d81aa <unknown>\n#15 0x559baa22e6b8 <unknown>\n#16 0x559baa22e847 <unknown>\n#17 0x559baa23e243 <unknown>\n#18 0x7fb41eea5b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 29, in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 87, in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 500, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a present element","time":{"start":1688519435025,"stop":1688519435087,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(1) span[class='price']\")"},{"name":"timeout","value":"5"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Go to specified element","time":{"start":1688519435088,"stop":1688519435182,"duration":94},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=114.0.5735.133)\nStacktrace:\n#0 0x559baa2454e3 <unknown>\n#1 0x559ba9f74c76 <unknown>\n#2 0x559ba9f7953c <unknown>\n#3 0x559ba9f7b480 <unknown>\n#4 0x559ba9fe8f32 <unknown>\n#5 0x559ba9fd0012 <unknown>\n#6 0x559ba9fe830e <unknown>\n#7 0x559ba9fcfde3 <unknown>\n#8 0x559ba9fa52dd <unknown>\n#9 0x559ba9fa634e <unknown>\n#10 0x559baa2053e4 <unknown>\n#11 0x559baa2093d7 <unknown>\n#12 0x559baa213b20 <unknown>\n#13 0x559baa20a023 <unknown>\n#14 0x559baa1d81aa <unknown>\n#15 0x559baa22e6b8 <unknown>\n#16 0x559baa22e847 <unknown>\n#17 0x559baa23e243 <unknown>\n#18 0x7fb41eea5b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 87, in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 500, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"bc435b40f44a543933bf7e0939347bab\", element=\"2C6367116AD90F9179D3FAFFA70DAB97_element_28\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(1) span[class='price']\")"},{"name":"timeout","value":"10"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(1) span[class='price']\")"}],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1688519435255,"stop":1688519435326,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_result_folder::0","time":{"start":1688520298592,"stop":1688520298592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"Testing Hot Seller Section"},{"name":"epic","value":"Main Page"},{"name":"tag","value":"@pytest.mark.xfail(reason='In CI the test failed in PR#203')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az451-778"},{"name":"thread","value":"3373-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":1,"passed":2,"unknown":0,"total":3},"items":[{"uid":"2ae40d96c5a19352","reportUrl":"https://DionisIno.github.io/luma_project/40//#testresult/2ae40d96c5a19352","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1688432909529,"stop":1688432910924,"duration":1395}},{"uid":"6a9a83d23b9eb7d4","reportUrl":"https://DionisIno.github.io/luma_project/6//#testresult/6a9a83d23b9eb7d4","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1688402391145,"stop":1688402392165,"duration":1020}}]},"tags":["@pytest.mark.xfail(reason='In CI the test failed in PR#203')"]},"source":"cb9b9487824f4b19.json","parameterValues":[]}