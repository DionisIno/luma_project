{"uid":"62a1bdcc58d1236a","name":"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct","fullName":"tests.test_sale.TestSideMenuBarMen#test_tc_10_02_01","historyId":"7d9cc06b830a248f9ded0f57b7152948","time":{"start":1688433335641,"stop":1688433335721,"duration":80},"description":"Check title of Men's Deals section","descriptionHtml":"<p>Check title of Men's Deals section</p>\n","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7f8945a95e90>\nsale_page = <pages.sale_page.SalePage object at 0x7f8947807b50>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1688432292822,"stop":1688432292922,"duration":100},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"clear_allure_result_folder","time":{"start":1688432292922,"stop":1688432292922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"driver","time":{"start":1688433333426,"stop":1688433334489,"duration":1063},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"sale_page","time":{"start":1688433334489,"stop":1688433335641,"duration":1152},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1688433334489,"stop":1688433335641,"duration":1152},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":1}],"testStage":{"description":"Check title of Men's Deals section","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7f8945a95e90>\nsale_page = <pages.sale_page.SalePage object at 0x7f8947807b50>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","steps":[{"name":"Check text in Men's deals title","time":{"start":1688433335642,"stop":1688433335720,"duration":78},"status":"passed","steps":[{"name":"Find a visible element","time":{"start":1688433335642,"stop":1688433335703,"duration":61},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1688433335642,"stop":1688433335671,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"5"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0},{"name":"Go to specified element","time":{"start":1688433335671,"stop":1688433335680,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"7e6483ca544af9aecfd4dd09e13bc391\", element=\"804914E95EB64B22B228A68980F37BF7_element_33\")>"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"10"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":2}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":3}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":4},"afterStages":[{"name":"driver::0","time":{"start":1688433335755,"stop":1688433335817,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"clear_allure_result_folder::0","time":{"start":1688433687518,"stop":1688433687518,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"epic","value":"Sale Page"},{"name":"feature","value":"Testing Side Menu Bar - Men's Deals Section"},{"name":"tag","value":"@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az797-168"},{"name":"thread","value":"3423-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"eab3a70354d67f63","reportUrl":"https://DionisIno.github.io/luma_project/6//#testresult/eab3a70354d67f63","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1688402752565,"stop":1688402752625,"duration":60}}]},"tags":["@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"]},"source":"62a1bdcc58d1236a.json","parameterValues":[]}