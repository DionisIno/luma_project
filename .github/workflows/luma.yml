# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: LUMA

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Get Pytest changed files
      id: changed-py-files
      uses: tj-actions/changed-files@v41
      with:
          files: |
            tests/*.py
    - name: Start video recording
      if: steps.changed-py-files.outputs.any_changed == 'true'
      id: video-recording
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb ffmpeg
        Xvfb :99 -screen 0 1900x1000x24 >/dev/null 2>&1 &
        sleep 1
        ffmpeg -nostdin -f x11grab -framerate 30 -i :99.0 screen.mp4 >/dev/null 2>&1 &
        echo "ffmpeg_pid=$!" >> "$GITHUB_OUTPUT"
    - name: Run Pytest on changed files
      if: steps.changed-py-files.outputs.any_changed == 'true'
      run: |
        DISPLAY=:99 pytest -s -v ${{ steps.changed-py-files.outputs.all_changed_files }}
    - name: Stop video recording
      if: always() && steps.changed-py-files.outputs.any_changed == 'true'
      run: |
        kill -s INT ${{ steps.video-recording.outputs.ffmpeg_pid }}
        tail --pid=${{ steps.video-recording.outputs.ffmpeg_pid }} -f /dev/null
    - uses: actions/upload-artifact@v2
      if: always() && steps.changed-py-files.outputs.any_changed == 'true'
      with:
        name: recording
        path: screen.mp4
