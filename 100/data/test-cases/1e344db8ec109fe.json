{"uid":"1e344db8ec109fe","name":"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct","fullName":"tests.test_sale.TestSideMenuBarMen#test_tc_10_02_01","historyId":"7d9cc06b830a248f9ded0f57b7152948","time":{"start":1693616215935,"stop":1693616216225,"duration":290},"description":"Check title of Men's Deals section","descriptionHtml":"<p>Check title of Men's Deals section</p>\n","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7fbc736c4c10>\nsale_page = <pages.sale_page.SalePage object at 0x7fbc754d5350>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693615008841,"stop":1693615008955,"duration":114},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"clear_allure_result_folder","time":{"start":1693615008955,"stop":1693615008955,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"driver","time":{"start":1693616213747,"stop":1693616214924,"duration":1177},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"sale_page","time":{"start":1693616214925,"stop":1693616215934,"duration":1009},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1693616214925,"stop":1693616215934,"duration":1009},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"stepsCount":1}],"testStage":{"description":"Check title of Men's Deals section","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7fbc736c4c10>\nsale_page = <pages.sale_page.SalePage object at 0x7fbc754d5350>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","steps":[{"name":"Check text in Men's deals title","time":{"start":1693616215935,"stop":1693616216224,"duration":289},"status":"passed","steps":[{"name":"Find a visible element","time":{"start":1693616215935,"stop":1693616216079,"duration":144},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1693616215935,"stop":1693616215958,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"5"}],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"stepsCount":0},{"name":"Go to specified element","time":{"start":1693616215958,"stop":1693616215968,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"a036b35928fbc03110117ca8a5d5e472\", element=\"A4A8BDB6A7AE703A63ED99037383F6E5_element_22\")>"}],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"stepsCount":0}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"10"}],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"stepsCount":2}],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"stepsCount":3}],"attachments":[{"uid":"24bf5befd1d4e237","name":"Screenshot","source":"24bf5befd1d4e237.png","type":"image/png","size":682681},{"uid":"f9fcdab1410bf51d","name":"HTML source","source":"f9fcdab1410bf51d.html","type":"text/html","size":85010}],"parameters":[],"attachmentsCount":2,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":4},"afterStages":[{"name":"driver::0","time":{"start":1693616216741,"stop":1693616216808,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"clear_allure_result_folder::0","time":{"start":1693616636981,"stop":1693616636981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"epic","value":"Sale Page"},{"name":"feature","value":"Testing Side Menu Bar - Men's Deals Section"},{"name":"tag","value":"@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az1242-738"},{"name":"thread","value":"2892-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":7,"passed":0,"unknown":0,"total":7},"items":[{"uid":"8ce35f359c61dcba","reportUrl":"https://DionisIno.github.io/luma_project/99//#testresult/8ce35f359c61dcba","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1693530084350,"stop":1693530084620,"duration":270}},{"uid":"4662fb8251e99c08","reportUrl":"https://DionisIno.github.io/luma_project/98//#testresult/4662fb8251e99c08","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1693443393487,"stop":1693443393549,"duration":62}},{"uid":"393c41d410636e26","reportUrl":"https://DionisIno.github.io/luma_project/97//#testresult/393c41d410636e26","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1693356950181,"stop":1693356950248,"duration":67}},{"uid":"6fd793c4f720744b","reportUrl":"https://DionisIno.github.io/luma_project/96//#testresult/6fd793c4f720744b","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1693270611233,"stop":1693270611301,"duration":68}},{"uid":"3ef5c040f040a852","reportUrl":"https://DionisIno.github.io/luma_project/95//#testresult/3ef5c040f040a852","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1693184217638,"stop":1693184217697,"duration":59}},{"uid":"bab7c828c41707cb","reportUrl":"https://DionisIno.github.io/luma_project/94//#testresult/bab7c828c41707cb","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1693097996507,"stop":1693097996754,"duration":247}}]},"tags":["@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"]},"source":"1e344db8ec109fe.json","parameterValues":[]}