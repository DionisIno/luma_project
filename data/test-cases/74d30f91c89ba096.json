{
  "uid" : "74d30f91c89ba096",
  "name" : "TC 02.01.51 - Check text of placeholder in Subscribe Email Field on each page specified in DATA_1",
  "fullName" : "tests.test_footer.TestFooter#test_tc_02_01_51_check_text_of_placeholder_in_subscribe_email_field_on_pages",
  "historyId" : "57f2fd9acc42db127cbe84bceb700f4d",
  "time" : {
    "start" : 1690073955382,
    "stop" : 1690073956469,
    "duration" : 1087
  },
  "description" : "Checks if text of placeholder in Subscribe Email Field is correct on each page in DATA_1",
  "descriptionHtml" : "<p>Checks if text of placeholder in Subscribe Email Field is correct on each page in DATA_1</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".field.newsletter input\"}\n  (Session info: chrome=114.0.5735.198)\nStacktrace:\n#0 0x55c49ff264e3 <unknown>\n#1 0x55c49fc55c76 <unknown>\n#2 0x55c49fc91c96 <unknown>\n#3 0x55c49fc91dc1 <unknown>\n#4 0x55c49fccb7f4 <unknown>\n#5 0x55c49fcb103d <unknown>\n#6 0x55c49fcc930e <unknown>\n#7 0x55c49fcb0de3 <unknown>\n#8 0x55c49fc862dd <unknown>\n#9 0x55c49fc8734e <unknown>\n#10 0x55c49fee63e4 <unknown>\n#11 0x55c49feea3d7 <unknown>\n#12 0x55c49fef4b20 <unknown>\n#13 0x55c49feeb023 <unknown>\n#14 0x55c49feb91aa <unknown>\n#15 0x55c49ff0f6b8 <unknown>\n#16 0x55c49ff0f847 <unknown>\n#17 0x55c49ff1f243 <unknown>\n#18 0x7f493af48b43 <unknown>",
  "statusTrace" : "self = <test_footer.TestFooter object at 0x7fcb8daa9110>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e601e95964be2bcd45fb31145f67b3cb\")>\nURL = 'https://magento.softwaretestingboard.com/what-is-new.html'\n\n    @allure.title(\"TC 02.01.51 - Check text of placeholder in Subscribe Email Field on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_51_check_text_of_placeholder_in_subscribe_email_field_on_pages(self, driver, URL):\n        \"\"\"Checks if text of placeholder in Subscribe Email Field is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       actual_text = page.check_text_of_subscribe_email_field_placeholder()\n\ntests/test_footer.py:438: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:251: in check_text_of_subscribe_email_field_placeholder\n    placeholder_text = self.driver.find_element(*self.footer_locators.SUBSCRIBE_EMAIL_FIELD).get_attribute('placeholder')\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcb8d181810>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55c49ff0f847 \\\\u003Cunknown>\\\\n#17 0x55c49ff1f243 \\\\u003Cunknown>\\\\n#18 0x7f493af48b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".field.newsletter input\"}\nE         (Session info: chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x55c49ff264e3 <unknown>\nE       #1 0x55c49fc55c76 <unknown>\nE       #2 0x55c49fc91c96 <unknown>\nE       #3 0x55c49fc91dc1 <unknown>\nE       #4 0x55c49fccb7f4 <unknown>\nE       #5 0x55c49fcb103d <unknown>\nE       #6 0x55c49fcc930e <unknown>\nE       #7 0x55c49fcb0de3 <unknown>\nE       #8 0x55c49fc862dd <unknown>\nE       #9 0x55c49fc8734e <unknown>\nE       #10 0x55c49fee63e4 <unknown>\nE       #11 0x55c49feea3d7 <unknown>\nE       #12 0x55c49fef4b20 <unknown>\nE       #13 0x55c49feeb023 <unknown>\nE       #14 0x55c49feb91aa <unknown>\nE       #15 0x55c49ff0f6b8 <unknown>\nE       #16 0x55c49ff0f847 <unknown>\nE       #17 0x55c49ff1f243 <unknown>\nE       #18 0x7f493af48b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1690073506870,
      "stop" : 1690073506962,
      "duration" : 92
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_result_folder",
    "time" : {
      "start" : 1690073506962,
      "stop" : 1690073506962,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1690073954368,
      "stop" : 1690073955382,
      "duration" : 1014
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Checks if text of placeholder in Subscribe Email Field is correct on each page in DATA_1",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".field.newsletter input\"}\n  (Session info: chrome=114.0.5735.198)\nStacktrace:\n#0 0x55c49ff264e3 <unknown>\n#1 0x55c49fc55c76 <unknown>\n#2 0x55c49fc91c96 <unknown>\n#3 0x55c49fc91dc1 <unknown>\n#4 0x55c49fccb7f4 <unknown>\n#5 0x55c49fcb103d <unknown>\n#6 0x55c49fcc930e <unknown>\n#7 0x55c49fcb0de3 <unknown>\n#8 0x55c49fc862dd <unknown>\n#9 0x55c49fc8734e <unknown>\n#10 0x55c49fee63e4 <unknown>\n#11 0x55c49feea3d7 <unknown>\n#12 0x55c49fef4b20 <unknown>\n#13 0x55c49feeb023 <unknown>\n#14 0x55c49feb91aa <unknown>\n#15 0x55c49ff0f6b8 <unknown>\n#16 0x55c49ff0f847 <unknown>\n#17 0x55c49ff1f243 <unknown>\n#18 0x7f493af48b43 <unknown>",
    "statusTrace" : "self = <test_footer.TestFooter object at 0x7fcb8daa9110>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e601e95964be2bcd45fb31145f67b3cb\")>\nURL = 'https://magento.softwaretestingboard.com/what-is-new.html'\n\n    @allure.title(\"TC 02.01.51 - Check text of placeholder in Subscribe Email Field on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_51_check_text_of_placeholder_in_subscribe_email_field_on_pages(self, driver, URL):\n        \"\"\"Checks if text of placeholder in Subscribe Email Field is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       actual_text = page.check_text_of_subscribe_email_field_placeholder()\n\ntests/test_footer.py:438: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:251: in check_text_of_subscribe_email_field_placeholder\n    placeholder_text = self.driver.find_element(*self.footer_locators.SUBSCRIBE_EMAIL_FIELD).get_attribute('placeholder')\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcb8d181810>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55c49ff0f847 \\\\u003Cunknown>\\\\n#17 0x55c49ff1f243 \\\\u003Cunknown>\\\\n#18 0x7f493af48b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".field.newsletter input\"}\nE         (Session info: chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x55c49ff264e3 <unknown>\nE       #1 0x55c49fc55c76 <unknown>\nE       #2 0x55c49fc91c96 <unknown>\nE       #3 0x55c49fc91dc1 <unknown>\nE       #4 0x55c49fccb7f4 <unknown>\nE       #5 0x55c49fcb103d <unknown>\nE       #6 0x55c49fcc930e <unknown>\nE       #7 0x55c49fcb0de3 <unknown>\nE       #8 0x55c49fc862dd <unknown>\nE       #9 0x55c49fc8734e <unknown>\nE       #10 0x55c49fee63e4 <unknown>\nE       #11 0x55c49feea3d7 <unknown>\nE       #12 0x55c49fef4b20 <unknown>\nE       #13 0x55c49feeb023 <unknown>\nE       #14 0x55c49feb91aa <unknown>\nE       #15 0x55c49ff0f6b8 <unknown>\nE       #16 0x55c49ff0f847 <unknown>\nE       #17 0x55c49ff1f243 <unknown>\nE       #18 0x7f493af48b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException",
    "steps" : [ {
      "name" : "Open a browser",
      "time" : {
        "start" : 1690073955382,
        "stop" : 1690073956419,
        "duration" : 1037
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Check the text of placeholder in Subscribe Email Field",
      "time" : {
        "start" : 1690073956419,
        "stop" : 1690073956468,
        "duration" : 49
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".field.newsletter input\"}\n  (Session info: chrome=114.0.5735.198)\nStacktrace:\n#0 0x55c49ff264e3 <unknown>\n#1 0x55c49fc55c76 <unknown>\n#2 0x55c49fc91c96 <unknown>\n#3 0x55c49fc91dc1 <unknown>\n#4 0x55c49fccb7f4 <unknown>\n#5 0x55c49fcb103d <unknown>\n#6 0x55c49fcc930e <unknown>\n#7 0x55c49fcb0de3 <unknown>\n#8 0x55c49fc862dd <unknown>\n#9 0x55c49fc8734e <unknown>\n#10 0x55c49fee63e4 <unknown>\n#11 0x55c49feea3d7 <unknown>\n#12 0x55c49fef4b20 <unknown>\n#13 0x55c49feeb023 <unknown>\n#14 0x55c49feb91aa <unknown>\n#15 0x55c49ff0f6b8 <unknown>\n#16 0x55c49ff0f847 <unknown>\n#17 0x55c49ff1f243 <unknown>\n#18 0x7f493af48b43 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/footer_page.py\", line 251, in check_text_of_subscribe_email_field_placeholder\n    placeholder_text = self.driver.find_element(*self.footer_locators.SUBSCRIBE_EMAIL_FIELD).get_attribute('placeholder')\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 831, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "1a17c5d2a30a3f3",
      "name" : "Screenshot",
      "source" : "1a17c5d2a30a3f3.png",
      "type" : "image/png",
      "size" : 796979
    }, {
      "uid" : "43536876066288f4",
      "name" : "HTML source",
      "source" : "43536876066288f4.html",
      "type" : "text/html",
      "size" : 106259
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "clear_allure_result_folder::0",
    "time" : {
      "start" : 1690075074103,
      "stop" : 1690075074103,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver::0",
    "time" : {
      "start" : 1690073956954,
      "stop" : 1690073957015,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Footer"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_footer"
  }, {
    "name" : "subSuite",
    "value" : "TestFooter"
  }, {
    "name" : "host",
    "value" : "fv-az622-781"
  }, {
    "name" : "thread",
    "value" : "3345-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_footer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "URL",
    "value" : "'https://magento.softwaretestingboard.com/what-is-new.html'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "74d30f91c89ba096.json",
  "parameterValues" : [ "'https://magento.softwaretestingboard.com/what-is-new.html'" ]
}