{"uid":"f74de1ffcbb3832b","name":"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct","fullName":"tests.test_sale.TestSideMenuBarMen#test_tc_10_02_01","historyId":"7d9cc06b830a248f9ded0f57b7152948","time":{"start":1695171495675,"stop":1695171495908,"duration":233},"description":"Check title of Men's Deals section","descriptionHtml":"<p>Check title of Men's Deals section</p>\n","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7efeb5760b50>\nsale_page = <pages.sale_page.SalePage object at 0x7efeb53b1f90>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695170331349,"stop":1695170331433,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_result_folder","time":{"start":1695170331433,"stop":1695170331433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1695171493590,"stop":1695171494807,"duration":1217},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"sale_page","time":{"start":1695171494807,"stop":1695171495675,"duration":868},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1695171494807,"stop":1695171495675,"duration":868},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"testStage":{"description":"Check title of Men's Deals section","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7efeb5760b50>\nsale_page = <pages.sale_page.SalePage object at 0x7efeb53b1f90>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","steps":[{"name":"Check text in Men's deals title","time":{"start":1695171495675,"stop":1695171495908,"duration":233},"status":"passed","steps":[{"name":"Find a visible element","time":{"start":1695171495676,"stop":1695171495870,"duration":194},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1695171495676,"stop":1695171495698,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Go to specified element","time":{"start":1695171495698,"stop":1695171495717,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"8b940b7147aa7de780007121e02c0661\", element=\"4369E96F4D8754396BB533CF40D39E07_element_7\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"f32ff47dfeb23ea8","name":"Screenshot","source":"f32ff47dfeb23ea8.png","type":"image/png","size":682681},{"uid":"231e60f79413ef8","name":"HTML source","source":"231e60f79413ef8.html","type":"text/html","size":85120}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1695171496325,"stop":1695171496391,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_result_folder::0","time":{"start":1695171901988,"stop":1695171901988,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Testing Side Menu Bar - Men's Deals Section"},{"name":"epic","value":"Sale Page"},{"name":"tag","value":"@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az1232-126"},{"name":"thread","value":"2937-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":4,"passed":0,"unknown":0,"total":4},"items":[{"uid":"8c57a4753181dedb","reportUrl":"https://DionisIno.github.io/luma_project/117//#testresult/8c57a4753181dedb","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1695085227562,"stop":1695085227945,"duration":383}},{"uid":"27eede52ba180996","reportUrl":"https://DionisIno.github.io/luma_project/116//#testresult/27eede52ba180996","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1694998675342,"stop":1694998675421,"duration":79}},{"uid":"bf3c3203e28daee1","reportUrl":"https://DionisIno.github.io/luma_project/115//#testresult/bf3c3203e28daee1","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1694912867226,"stop":1694912867626,"duration":400}}]},"tags":["@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"]},"source":"f74de1ffcbb3832b.json","parameterValues":[]}