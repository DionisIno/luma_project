{"uid":"10e49309453e8b0e","name":"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct","fullName":"tests.test_sale.TestSideMenuBarMen#test_tc_10_02_01","historyId":"7d9cc06b830a248f9ded0f57b7152948","time":{"start":1689383858250,"stop":1689383858634,"duration":384},"description":"Check title of Men's Deals section","descriptionHtml":"<p>Check title of Men's Deals section</p>\n","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7f5f0c1cd690>\nsale_page = <pages.sale_page.SalePage object at 0x7f5f0d095010>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1689382666306,"stop":1689382666405,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_result_folder","time":{"start":1689382666405,"stop":1689382666405,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1689383856073,"stop":1689383857255,"duration":1182},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"sale_page","time":{"start":1689383857255,"stop":1689383858249,"duration":994},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1689383857256,"stop":1689383858249,"duration":993},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"Check title of Men's Deals section","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7f5f0c1cd690>\nsale_page = <pages.sale_page.SalePage object at 0x7f5f0d095010>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","steps":[{"name":"Check text in Men's deals title","time":{"start":1689383858250,"stop":1689383858634,"duration":384},"status":"passed","steps":[{"name":"Find a visible element","time":{"start":1689383858251,"stop":1689383858558,"duration":307},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1689383858251,"stop":1689383858308,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"5"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Go to specified element","time":{"start":1689383858309,"stop":1689383858398,"duration":89},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"669b5d0607a89099c2670cfe2f2bea01\", element=\"243076ADBD8197A99062FE339EA444D0_element_7\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"10"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"9dfc698e5d5b19b8","name":"Screenshot","source":"9dfc698e5d5b19b8.png","type":"image/png","size":681444},{"uid":"53b640941621dd76","name":"HTML source","source":"53b640941621dd76.html","type":"text/html","size":86650}],"parameters":[],"stepsCount":4,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1689383859035,"stop":1689383859101,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_result_folder::0","time":{"start":1689384284967,"stop":1689384284967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Sale Page"},{"name":"feature","value":"Testing Side Menu Bar - Men's Deals Section"},{"name":"tag","value":"@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az341-447"},{"name":"thread","value":"3391-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":7,"passed":0,"unknown":0,"total":7},"items":[{"uid":"2daa250aaf49b38d","reportUrl":"https://DionisIno.github.io/luma_project/50//#testresult/2daa250aaf49b38d","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1689297531564,"stop":1689297531711,"duration":147}},{"uid":"5b80f2078a13f278","reportUrl":"https://DionisIno.github.io/luma_project/49//#testresult/5b80f2078a13f278","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1689211032624,"stop":1689211032696,"duration":72}},{"uid":"25d25295c5569d80","reportUrl":"https://DionisIno.github.io/luma_project/48//#testresult/25d25295c5569d80","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1689124614401,"stop":1689124614797,"duration":396}},{"uid":"841339dde871ffa1","reportUrl":"https://DionisIno.github.io/luma_project/47//#testresult/841339dde871ffa1","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1689037694989,"stop":1689037695046,"duration":57}},{"uid":"57744af3ceb652c4","reportUrl":"https://DionisIno.github.io/luma_project/46//#testresult/57744af3ceb652c4","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1688951631699,"stop":1688951631763,"duration":64}},{"uid":"5a04153e0fdf9332","reportUrl":"https://DionisIno.github.io/luma_project/45//#testresult/5a04153e0fdf9332","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1688865806266,"stop":1688865806352,"duration":86}}]},"tags":["@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"]},"source":"10e49309453e8b0e.json","parameterValues":[]}